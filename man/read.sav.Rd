% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readsav.R
\name{read.sav}
\alias{read.sav}
\title{read.sav}
\usage{
read.sav(file, convert.factors = TRUE, generate.factors = TRUE,
  encoding = TRUE, fromEncoding = NULL, use.missings = TRUE,
  debug = FALSE, override = FALSE, convert.dates = TRUE,
  add.rownames = FALSE, pass)
}
\arguments{
\item{file}{\emph{string} a sav-file to import. can be a file on a computer
or an url. in this case the file will be downloaded and read befor it is
used.}

\item{convert.factors}{\emph{logical} if true numeric or character variables
will be converted into a factor in R.}

\item{generate.factors}{\emph{logical} function to convert variables with
partial labels into factors. e.g. 1 - low and 5 - high are provided, labels
2, 3 and 4 will be created. especially useful in combination with
\code{use.missings=TRUE}.}

\item{encoding}{\emph{logical} shall values be converted? If true, read.sav
will try the charcode stored inside the sav-file. If this value is 2 or not
available, fromEncoding can be used to change encoding.}

\item{fromEncoding}{\emph{character.} encoding of the imported file. This
information is stored inside the sav-file, but is currently unused. Still
this option can be used to define the inital encoding by hand.}

\item{use.missings}{\emph{logical} should missing values be converted.
Defaults to TRUE.}

\item{debug}{\emph{logical} provides additional debug information. Most
likely not usefull to any user.}

\item{override}{\emph{logical}. The filename provided in \code{file} is
checked for the ending sav. If the fileending is different, nothing is read.
This option can be used to override this behavior.}

\item{convert.dates}{\emph{logical}. Should dates be converted on the fly?}

\item{add.rownames}{\emph{logical.} If \code{TRUE}, the first column will be
used as rownames. Variable will be dropped afterwards.}

\item{pass}{\emph{character}. If encrypted sav should be imported, this is a
maximum of ten character encryption key.}
}
\value{
\code{readspss} returns a data.frame with additional objects
\describe{
\item{row.names}{rownames}
\item{names}{colnames}
\item{datalabel}{datalabel}
\item{datestamp}{datestamp}
\item{timestamp}{timestamp}
\item{filelabel}{filelabel}
\item{class}{data.frame}
\item{vtype}{SPSS type 0 is usually a numeric/integer}
\item{val.label}{value labels}
\item{disppar}{matrix of display parameters if available}
\item{missings}{a list containg information about the missing variables. if
\code{use.missings=TRUE} this Information will be used to generate missings.}
\item{haslabel}{list of variables that contain labels}
\item{longstring}{character vector of long strings if any in file}
\item{longmissing}{character vector of missings in longstrings if any}
\item{longlabel}{character vector of long labels}
\item{cflag}{0 if uncompressed, 1 if compressed}
\item{endian}{2 or 3 if little endian else 0}
\item{compression}{compression similar to cflag, somehow stored twice in the
sav file}
\item{doc}{list containing documentation information if any}
\item{charcode}{encoding string most likely 2 is CP1252}
\item{encoding}{sometimes sav-file contain encoding as a extra string}
\item{ownEnc}{encoding of the R-session}
\item{doenc}{was the file supposed to be encoded?}
\item{autoenc}{was encoding applied to the file?}
\item{swapit}{were the bytes swapped?}
\item{totals}{character string of totals if any}
\item{dataview}{xml file how the data should be printed}
\item{extraproduct}{additional string provided}
\item{label}{list containing label value information}
\item{varmatrix}{a matrix with information how the data is stored}
\item{var.label}{variable labels}
\item{lmissings}{missings table if any in longstrings}
}
}
\description{
Function to read a SPSS sav file into a data.frame().
}
\details{
SPSS files are widely available, though for R long time only foreign
and memisc provided functions to import sav-files. Lately haven joined.
This package is an approach to offer another alternative, to document the
sav-format and provide additional options to import the data.
sav-files are stored most exclusively as numerics only in compression mode
are some integers stored as integers. Still they are returned as numerics.
}
\note{
Information to decrypt the sav-format was provided by tda
\url{http://www.stat.ruhr-uni-bochum.de/tda.html} and pspp
 \url{http://www.gnu.org/software/pspp/}
}
\examples{
fl <- system.file("extdata", "electric.sav", package = "readspss")
dd <- read.sav(fl)

}
\seealso{
\code{\link[foreign]{read.spss}}, \code{memisc} and
\code{\link[haven]{read_sav}}.
}
\author{
Jan Marvin Garbuszus \email{jan.garbuszus@ruhr-uni-bochum.de}
}
